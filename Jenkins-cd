pipeline {
    agent any

    parameters {
        choice(
            name: 'action',
            choices: 'create\ndestroycluster\ndestroy',
            description: 'create/update/destroy eks'
        )
        string(
            name: 'cluster',
            defaultValue: 'demo-cluster',
            description: 'eks-cluster-name'
        )
        string(
            name: 'region',
            defaultValue: 'ap-south-1',
            description: 'eks-cluster-region'
        )
    }

    environment {
        ACCESS_KEY = credentials('AWS_ACCESS_KEY_ID')
        SECRET_KEY = credentials('AWS_SECRET_ACCESS_KEY')
    }

    stages {
        stage('Git checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/saikumarpinisetti3/demo-counter-app.git'
            }
        }

        stage('EKS connect') {
            steps {
                withCredentials([string(credentialsId: 'AWS_ACCESS_KEY_ID', variable: 'ACCESS_KEY'),
                    string(credentialsId: 'AWS_SECRET_ACCESS_KEY', variable: 'SECRET_KEY')]) {
                    sh "aws configure set aws_access_key_id '${ACCESS_KEY}'"
                    sh "aws configure set aws_secret_access_key '${SECRET_KEY}'"
                    sh "aws configure set region '${params.region}'"
                    sh "aws eks --region '${params.region}' update-kubeconfig --name '${params.cluster}'"
                }
            }
        }

        stage('EKS deploy') {
            when {
                expression { params.action == 'create' }
            }
            steps {
                sh 'kubectl apply -f .'
            }
        }
    }
}
